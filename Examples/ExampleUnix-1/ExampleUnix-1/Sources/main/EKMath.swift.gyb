// LOCK: File generated by gyb, do not edit

#if os(Linux)
	import Glibc
#else
	import Darwin
#endif

func EKToRadians(_ degrees: Double) -> Double {
	return degrees / 180 * Double(M_PI)
}

//// Comparator Chains
precedencegroup ComparisonChainPrecedence {
	higherThan: ComparisonPrecedence
	associativity: right
}

infix operator ≤: ComparisonChainPrecedence
infix operator ≤=: ComparisonChainPrecedence
infix operator ≥: ComparisonChainPrecedence
infix operator ≥=: ComparisonChainPrecedence

%for (type, limit) in [('Int', 'max'),
%						('Float', 'infinity'),
%						('Double', 'infinity')]:
//
func ≤ (left: ${type}, right: ${type}) -> ${type} {

	if left < right {
		return left
	} else {
		return -${type}.${limit}
	}
}

func ≤= (left: ${type}, right: ${type}) -> ${type} {

	if left <= right {
		return left
	} else {
		return -${type}.${limit}
	}
}

func ≥ (left: ${type}, right: ${type}) -> ${type} {

	if left > right {
		return left
	} else {
		return ${type}.${limit}
	}
}

func ≥= (left: ${type}, right: ${type}) -> ${type} {

	if left >= right {
		return left
	} else {
		return ${type}.${limit}
	}
}
% end
